{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport DefaultTimer from \"./DefaultTimer\";\nimport DefaultRenderer from \"./DefaultRenderer\";\nimport DefaultTouchProcessor from \"./DefaultTouchProcessor\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getEntitiesFromProps = function getEntitiesFromProps(props) {\n  return props.initState || props.initialState || props.state || props.initEntities || props.initialEntities || props.entities;\n};\n\nvar isPromise = function isPromise(obj) {\n  return !!(obj && obj.then && obj.then.constructor && obj.then.call && obj.then.apply);\n};\n\nvar GameEngine = function (_Component) {\n  _inherits(GameEngine, _Component);\n\n  var _super = _createSuper(GameEngine);\n\n  function GameEngine(props) {\n    var _this;\n\n    _classCallCheck(this, GameEngine);\n\n    _this = _super.call(this, props);\n\n    _this.clear = function () {\n      _this.touches.length = 0;\n      _this.events.length = 0;\n      _this.previousTime = null;\n      _this.previousDelta = null;\n    };\n\n    _this.start = function () {\n      _this.clear();\n\n      _this.timer.start();\n\n      _this.dispatch({\n        type: \"started\"\n      });\n    };\n\n    _this.stop = function () {\n      _this.timer.stop();\n\n      _this.dispatch({\n        type: \"stopped\"\n      });\n    };\n\n    _this.swap = function _callee(newEntities) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isPromise(newEntities)) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(newEntities);\n\n            case 3:\n              newEntities = _context.sent;\n\n            case 4:\n              _this.setState({\n                entities: newEntities || {}\n              }, function () {\n                _this.clear();\n\n                _this.dispatch({\n                  type: \"swapped\"\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.publish = function (e) {\n      _this.dispatch(e);\n    };\n\n    _this.publishEvent = function (e) {\n      _this.dispatch(e);\n    };\n\n    _this.dispatch = function (e) {\n      setTimeout(function () {\n        _this.events.push(e);\n\n        if (_this.props.onEvent) _this.props.onEvent(e);\n      }, 0);\n    };\n\n    _this.dispatchEvent = function (e) {\n      _this.dispatch(e);\n    };\n\n    _this.updateHandler = function (currentTime) {\n      var args = {\n        touches: _this.touches,\n        screen: _this.screen,\n        layout: _this.layout,\n        events: _this.events,\n        dispatch: _this.dispatch,\n        time: {\n          current: currentTime,\n          previous: _this.previousTime,\n          delta: currentTime - (_this.previousTime || currentTime),\n          previousDelta: _this.previousDelta\n        }\n      };\n\n      var newState = _this.props.systems.reduce(function (state, sys) {\n        return sys(state, args);\n      }, _this.state.entities);\n\n      _this.touches.length = 0;\n      _this.events.length = 0;\n      _this.previousTime = currentTime;\n      _this.previousDelta = args.time.delta;\n\n      _this.setState({\n        entities: newState\n      });\n    };\n\n    _this.onLayoutHandler = function (e) {\n      _this.screen = Dimensions.get(\"window\");\n      _this.layout = e.nativeEvent.layout;\n\n      _this.forceUpdate();\n    };\n\n    _this.onTouchStartHandler = function (e) {\n      _this.touchProcessor.process(\"start\", e.nativeEvent);\n    };\n\n    _this.onTouchMoveHandler = function (e) {\n      _this.touchProcessor.process(\"move\", e.nativeEvent);\n    };\n\n    _this.onTouchEndHandler = function (e) {\n      _this.touchProcessor.process(\"end\", e.nativeEvent);\n    };\n\n    _this.state = {\n      entities: null\n    };\n    _this.timer = props.timer || new DefaultTimer();\n\n    _this.timer.subscribe(_this.updateHandler);\n\n    _this.touches = [];\n    _this.screen = Dimensions.get(\"window\");\n    _this.previousTime = null;\n    _this.previousDelta = null;\n    _this.events = [];\n    _this.touchProcessor = props.touchProcessor(_this.touches);\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(GameEngine, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var entities;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              entities = getEntitiesFromProps(this.props);\n\n              if (!isPromise(entities)) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(entities);\n\n            case 4:\n              entities = _context2.sent;\n\n            case 5:\n              this.setState({\n                entities: entities || {}\n              }, function () {\n                if (_this2.props.running) _this2.start();\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stop();\n      this.timer.unsubscribe(this.updateHandler);\n      if (this.touchProcessor.end) this.touchProcessor.end();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.running !== this.props.running) {\n        if (nextProps.running) this.start();else this.stop();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: [css.container, this.props.style],\n        onLayout: this.onLayoutHandler,\n        children: [_jsx(View, {\n          style: css.entityContainer,\n          onTouchStart: this.onTouchStartHandler,\n          onTouchMove: this.onTouchMoveHandler,\n          onTouchEnd: this.onTouchEndHandler,\n          children: this.props.renderer(this.state.entities, this.screen, this.layout)\n        }), _jsx(View, {\n          pointerEvents: \"box-none\",\n          style: StyleSheet.absoluteFill,\n          children: this.props.children\n        })]\n      });\n    }\n  }]);\n\n  return GameEngine;\n}(Component);\n\nexport { GameEngine as default };\nGameEngine.defaultProps = {\n  systems: [],\n  entities: {},\n  renderer: DefaultRenderer,\n  touchProcessor: DefaultTouchProcessor({\n    triggerPressEventBefore: 200,\n    triggerLongPressEventAfter: 700\n  }),\n  running: true\n};\nvar css = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  entityContainer: {\n    flex: 1,\n    backgroundColor: \"transparent\"\n  }\n});","map":{"version":3,"names":["React","Component","DefaultTimer","DefaultRenderer","DefaultTouchProcessor","getEntitiesFromProps","props","initState","initialState","state","initEntities","initialEntities","entities","isPromise","obj","then","constructor","call","apply","GameEngine","clear","touches","length","events","previousTime","previousDelta","start","timer","dispatch","type","stop","swap","newEntities","setState","publish","e","publishEvent","setTimeout","push","onEvent","dispatchEvent","updateHandler","currentTime","args","screen","layout","time","current","previous","delta","newState","systems","reduce","sys","onLayoutHandler","Dimensions","get","nativeEvent","forceUpdate","onTouchStartHandler","touchProcessor","process","onTouchMoveHandler","onTouchEndHandler","subscribe","running","unsubscribe","end","nextProps","css","container","style","entityContainer","renderer","StyleSheet","absoluteFill","children","defaultProps","triggerPressEventBefore","triggerLongPressEventAfter","create","flex","backgroundColor"],"sources":["C:/Users/HITEN/firstapp/node_modules/react-native-game-engine/src/GameEngine.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { View, StyleSheet, Dimensions } from \"react-native\";\nimport DefaultTimer from \"./DefaultTimer\";\nimport DefaultRenderer from \"./DefaultRenderer\";\nimport DefaultTouchProcessor from \"./DefaultTouchProcessor\";\n\nconst getEntitiesFromProps = props =>\n  props.initState ||\n  props.initialState ||\n  props.state ||\n  props.initEntities ||\n  props.initialEntities ||\n  props.entities;\n\nconst isPromise = obj => {\n  return !!(\n    obj &&\n    obj.then &&\n    obj.then.constructor &&\n    obj.then.call &&\n    obj.then.apply\n  );\n};\n\nexport default class GameEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entities: null\n    };\n    this.timer = props.timer || new DefaultTimer();\n    this.timer.subscribe(this.updateHandler);\n    this.touches = [];\n    this.screen = Dimensions.get(\"window\");\n    this.previousTime = null;\n    this.previousDelta = null;\n    this.events = [];\n    this.touchProcessor = props.touchProcessor(this.touches);\n    this.layout = null;\n  }\n\n  async componentDidMount() {\n    let entities = getEntitiesFromProps(this.props);\n\n    if (isPromise(entities)) entities = await entities;\n\n    this.setState(\n      {\n        entities: entities || {}\n      },\n      () => {\n        if (this.props.running) this.start();\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.timer.unsubscribe(this.updateHandler);\n    if (this.touchProcessor.end) this.touchProcessor.end();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.running !== this.props.running) {\n      if (nextProps.running) this.start();\n      else this.stop();\n    }\n  }\n\n  clear = () => {\n    this.touches.length = 0;\n    this.events.length = 0;\n    this.previousTime = null;\n    this.previousDelta = null;\n  };\n\n  start = () => {\n    this.clear();\n    this.timer.start();\n    this.dispatch({ type: \"started\" });\n  };\n\n  stop = () => {\n    this.timer.stop();\n    this.dispatch({ type: \"stopped\" });\n  };\n\n  swap = async newEntities => {\n    if (isPromise(newEntities)) newEntities = await newEntities;\n\n    this.setState({ entities: newEntities || {} }, () => {\n      this.clear();\n      this.dispatch({ type: \"swapped\" });\n    });\n  };\n\n  publish = e => {\n    this.dispatch(e);\n  };\n\n  publishEvent = e => {\n    this.dispatch(e);\n  };\n\n  dispatch = e => {\n    setTimeout(() => {\n      this.events.push(e);\n      if (this.props.onEvent) this.props.onEvent(e);\n    }, 0);\n  };\n\n  dispatchEvent = e => {\n    this.dispatch(e);\n  };\n\n  updateHandler = currentTime => {\n    let args = {\n      touches: this.touches,\n      screen: this.screen,\n      layout: this.layout,\n      events: this.events,\n      dispatch: this.dispatch,\n      time: {\n        current: currentTime,\n        previous: this.previousTime,\n        delta: currentTime - (this.previousTime || currentTime),\n        previousDelta: this.previousDelta\n      }\n    };\n\n    let newState = this.props.systems.reduce(\n      (state, sys) => sys(state, args),\n      this.state.entities\n    );\n\n    this.touches.length = 0;\n    this.events.length = 0;\n    this.previousTime = currentTime;\n    this.previousDelta = args.time.delta;\n    this.setState({ entities: newState });\n  };\n\n  onLayoutHandler = e => {\n    this.screen = Dimensions.get(\"window\");\n    this.layout = e.nativeEvent.layout;\n    this.forceUpdate();\n  };\n\n  onTouchStartHandler = e => {\n    this.touchProcessor.process(\"start\", e.nativeEvent);\n  };\n\n  onTouchMoveHandler = e => {\n    this.touchProcessor.process(\"move\", e.nativeEvent);\n  };\n\n  onTouchEndHandler = e => {\n    this.touchProcessor.process(\"end\", e.nativeEvent);\n  };\n\n  render() {\n    return (\n      <View\n        style={[css.container, this.props.style]}\n        onLayout={this.onLayoutHandler}\n      >\n        <View\n          style={css.entityContainer}\n          onTouchStart={this.onTouchStartHandler}\n          onTouchMove={this.onTouchMoveHandler}\n          onTouchEnd={this.onTouchEndHandler}\n        >\n          {this.props.renderer(this.state.entities, this.screen, this.layout)}\n        </View>\n\n        <View\n          pointerEvents={\"box-none\"}\n          style={StyleSheet.absoluteFill}\n        >\n          {this.props.children}\n        </View>\n      </View>\n    );\n  }\n}\n\nGameEngine.defaultProps = {\n  systems: [],\n  entities: {},\n  renderer: DefaultRenderer,\n  touchProcessor: DefaultTouchProcessor({\n    triggerPressEventBefore: 200,\n    triggerLongPressEventAfter: 700\n  }),\n  running: true\n};\n\nconst css = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  entityContainer: {\n    flex: 1,\n    //-- Looks like Android requires bg color here\n    //-- to register touches. If we didn't worry about\n    //-- 'children' (foreground) components capturing events,\n    //-- this whole shenanigan could be avoided..\n    backgroundColor: \"transparent\"\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}