{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { GameEngine } from \"react-native-game-engine\";\nimport entities from \"./entities\";\nimport Physics from \"./physics\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      running = _useState2[0],\n      setRunning = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      GameEngine = _useState4[0],\n      setGameEngine = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPoints = _useState6[0],\n      setcCurrentPoints = _useState6[1];\n\n  useEffect(function () {\n    setRunning(false);\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      style: {\n        textAlign: \"center\",\n        fontSize: 40,\n        fontWeight: \"bold\",\n        margin: 20\n      },\n      children: currentPoints\n    }), _jsxs(GameEngine, {\n      ref: function ref(_ref) {\n        setGameEngine(_ref);\n      },\n      systems: {\n        Physics: Physics\n      },\n      entities: entities(),\n      running: running,\n      onEvent: function onEvent(e) {\n        switch (e.type) {\n          case \"game over\":\n            setRunning(false);\n            GameEngine.stop();\n            break;\n\n          case \"new_point\":\n            setcCurrentPoints(currentPoints + 1);\n            break;\n        }\n      },\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      },\n      children: [_jsx(StatusBar, {\n        style: \"auto\",\n        hidden: true\n      }), \" \"]\n    }), !running ? _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: \"black\",\n          paddingHorizontal: 30,\n          paddingVertical: 10\n        },\n        onPress: function onPress() {\n          setCurrentPoints(0);\n          setRunning(true);\n          GameEngine.swap(entities());\n        },\n        children: _jsx(Text, {\n          style: {\n            fontWeight: \"bold\",\n            color: \"white\",\n            fontSize: 30\n          },\n          children: \"START GAME\"\n        })\n      })\n    }) : null]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","StatusBar","GameEngine","entities","Physics","App","running","setRunning","setGameEngine","currentPoints","setcCurrentPoints","flex","textAlign","fontSize","fontWeight","margin","ref","e","type","stop","position","top","left","right","bottom","justifyContent","alignItems","backgroundColor","paddingHorizontal","paddingVertical","setCurrentPoints","swap","color"],"sources":["C:/Users/HITEN/firstapp/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { View } from \"react-native\";\nimport { GameEngine } from \"react-native-game-engine\";\nimport entities from \"./entities\";\nimport Physics from \"./physics\";\nimport { TouchableOpacity } from \"react-native-web\";\nexport default function App() {\n  const [running, setRunning] = useState(false);\n  const [GameEngine, setGameEngine] = useState(null);\n  const [currentPoints, setcCurrentPoints] = useState(0);\n  useEffect(() => {\n    setRunning(false);\n  }, []);\n  return (\n    <View style={{ flex: 1 }}>\n      <Text\n        style={{\n          textAlign: \"center\",\n          fontSize: 40,\n          fontWeight: \"bold\",\n          margin: 20,\n        }}\n      >\n        {currentPoints}\n      </Text>\n      <GameEngine\n        ref={(ref) => {\n          setGameEngine(ref);\n        }}\n        systems={{ Physics }}\n        entities={entities()}\n        running={running}\n        onEvent={(e) => {\n          switch (e.type) {\n            case \"game over\":\n              setRunning(false);\n              GameEngine.stop();\n\n              break;\n            case \"new_point\":\n              setcCurrentPoints(currentPoints + 1);\n              break;\n          }\n        }}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      >\n        <StatusBar style=\"auto\" hidden={true} />{\" \"}\n      </GameEngine>\n      {!running ? (\n        <View\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n        >\n          <TouchableOpacity\n            style={{\n              backgroundColor: \"black\",\n              paddingHorizontal: 30,\n              paddingVertical: 10,\n            }}\n            onPress={() => {\n              setCurrentPoints(0);\n              setRunning(true);\n              GameEngine.swap(entities());\n            }}\n          >\n            <Text\n              style={{\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontSize: 30,\n              }}\n            >\n              START GAME\n            </Text>\n          </TouchableOpacity>\n        </View>\n      ) : null}\n    </View>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA8BN,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOO,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAoCR,QAAQ,CAAC,IAAD,CAA5C;EAAA;EAAA,IAAOG,UAAP;EAAA,IAAmBM,aAAnB;;EACA,iBAA2CT,QAAQ,CAAC,CAAD,CAAnD;EAAA;EAAA,IAAOU,aAAP;EAAA,IAAsBC,iBAAtB;;EACAV,SAAS,CAAC,YAAM;IACdO,UAAU,CAAC,KAAD,CAAV;EACD,CAFQ,EAEN,EAFM,CAAT;EAGA,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEI,IAAI,EAAE;IAAR,CAAb;IAAA,WACE,KAAC,IAAD;MACE,KAAK,EAAE;QACLC,SAAS,EAAE,QADN;QAELC,QAAQ,EAAE,EAFL;QAGLC,UAAU,EAAE,MAHP;QAILC,MAAM,EAAE;MAJH,CADT;MAAA,UAQGN;IARH,EADF,EAWE,MAAC,UAAD;MACE,GAAG,EAAE,aAACO,IAAD,EAAS;QACZR,aAAa,CAACQ,IAAD,CAAb;MACD,CAHH;MAIE,OAAO,EAAE;QAAEZ,OAAO,EAAPA;MAAF,CAJX;MAKE,QAAQ,EAAED,QAAQ,EALpB;MAME,OAAO,EAAEG,OANX;MAOE,OAAO,EAAE,iBAACW,CAAD,EAAO;QACd,QAAQA,CAAC,CAACC,IAAV;UACE,KAAK,WAAL;YACEX,UAAU,CAAC,KAAD,CAAV;YACAL,UAAU,CAACiB,IAAX;YAEA;;UACF,KAAK,WAAL;YACET,iBAAiB,CAACD,aAAa,GAAG,CAAjB,CAAjB;YACA;QARJ;MAUD,CAlBH;MAmBE,KAAK,EAAE;QACLW,QAAQ,EAAE,UADL;QAELC,GAAG,EAAE,CAFA;QAGLC,IAAI,EAAE,CAHD;QAILC,KAAK,EAAE,CAJF;QAKLC,MAAM,EAAE;MALH,CAnBT;MAAA,WA2BE,KAAC,SAAD;QAAW,KAAK,EAAC,MAAjB;QAAwB,MAAM,EAAE;MAAhC,EA3BF,EA2B2C,GA3B3C;IAAA,EAXF,EAwCG,CAAClB,OAAD,GACC,KAAC,IAAD;MACE,KAAK,EAAE;QAAEK,IAAI,EAAE,CAAR;QAAWc,cAAc,EAAE,QAA3B;QAAqCC,UAAU,EAAE;MAAjD,CADT;MAAA,UAGE,KAAC,gBAAD;QACE,KAAK,EAAE;UACLC,eAAe,EAAE,OADZ;UAELC,iBAAiB,EAAE,EAFd;UAGLC,eAAe,EAAE;QAHZ,CADT;QAME,OAAO,EAAE,mBAAM;UACbC,gBAAgB,CAAC,CAAD,CAAhB;UACAvB,UAAU,CAAC,IAAD,CAAV;UACAL,UAAU,CAAC6B,IAAX,CAAgB5B,QAAQ,EAAxB;QACD,CAVH;QAAA,UAYE,KAAC,IAAD;UACE,KAAK,EAAE;YACLW,UAAU,EAAE,MADP;YAELkB,KAAK,EAAE,OAFF;YAGLnB,QAAQ,EAAE;UAHL,CADT;UAAA;QAAA;MAZF;IAHF,EADD,GA2BG,IAnEN;EAAA,EADF;AAuED"},"metadata":{},"sourceType":"module"}